//mark visit by making LL = NULL, however cant print graph at the end
//tell edge by the most rigt vertex, eg 7:5->4->, vertf = 4; 5:7->3 & 4:3->1, vertf =1; etc
//everytime dequeue == vertf then ++ as it means that the level is done
int BFS (Graph g, int v, int w){

    // Write your code here
    Queue q1;
    q1.head = NULL;
    q1.size = 0;
    q1.tail = NULL;

    Graph g1;
    g1.E = 0;
    g1.V =0;
    g1.list = NULL;

    g1 = g;
    //make visited node = NULL so will skip when checked

    int i=0,w1, vert,vertf,flag =0;
    ListNode *temp;


    enqueue(&q1, v);      //enqueue 7
    vertf = v;
    while(!isEmptyQueue(q1))
    {
        w1 = getFront(q1);          //w1 = 7
        dequeue(&q1);
        printf("Visited %d\n",w1);
        if(w1 == w)
            return i;
        temp = g1.list[w1-1];          //node of 7

        if(w1 == vertf)
            {
                flag = 1;
                i++;
                printf("vertf == w1, w1 is %d, i is %d\n",vertf,i);
            }

        while(temp)
        {



            vert = temp->vertex;   //7->5;5->4
            printf("Visited2 %d\n",vert);
            enqueue(&q1, vert);    //enq 5 & 4
            temp = temp->next;


            if(flag ==1)
            {
                vertf = vert;
                printf("vertf is %d\n",vertf);
            }



        }
        g1.list[w1-1] = NULL;        //means visited

        flag =0;



    }



    return -1;
